#!/usr/bin/env node

var path = require("path");
var fs = require("fs");
var glob = require("glob");
var sprintf = require("sprintf-js").sprintf;
var commander = require('commander');

commander
  .option('-d, --directory <directory>', 'The source directory to index, relative to the current working directory.', '.')
  .option('-s, --source <source>', 'Glob for finding modules in the given directory.', '**/index.js')
  .option('-t, --target <target>', 'The file to write to, relative to <source>.', 'index.js')
  .option('-h, --header <header>', 'String to prepend to top of generated file.',
    '// DO NOT EDIT - this file was generated by [make-index](https://github.com/penx/make-index)\n')
  .option('-l --line <line>', 'String template for each line, following sprintf format', 'export %1$s from \'./%2$s\';\n')
  .parse(process.argv);

var globOptions = {
  cwd: path.join(process.cwd(), commander.directory)
}

glob(commander.source, globOptions, function (er, paths) {
  var modules = paths.reduce((acc, p) => {

    var moduleName = path.basename(path.parse(p).dir);

    return {
      ...acc,
      [moduleName]: p
    }
  }, {})

  var indexFile = Object.keys(modules).reduce((acc, module) => {
    if(!module) {
      return acc
    }
    return `${acc}${sprintf(commander.line, module, path.parse(modules[module]).dir, path.parse(modules[module]).name, path.parse(modules[module]).ext)}`}, commander.header)

  fs.writeFile(path.join(commander.directory, commander.target), indexFile, (err) => {
    if (err) throw err;
    console.log('The file has been saved!');
  });

})
